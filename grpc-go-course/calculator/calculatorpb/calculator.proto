syntax = "proto3";

package calculator;
option go_package="calculatorpb";

message Request {
  int32 first = 1;
  int32 second = 2;
}

message Response {
  int32 sum = 1;
}

// Server Streaming 
message PrimeNumberDecompositionRequest {
  int64 number = 1;
}
message PrimeNumberDecompositionResponse {
  int64 prime_factor = 1; 
}

// Client Streaming 
message ComputeAverageRequest {
  int32 number = 1;
}

message ComputeAverageResponse {
  double average = 1;
}

// Bi-directional Streaming
message FindMaximumRequest{
  int32 number = 1;
}

message FindMaximumResponse{
  int32 maximum = 1;
}

// Error handling
message SquareRootRequest {
  int32 number = 1;
}

message SquareRootResponse {
  double number_root = 1;
}


service CalculatorService {
  // Unary
  rpc Sum(Request) returns (Response) {}; 
  // Server streaming
  rpc PrimeNumberDecomposition(PrimeNumberDecompositionRequest) returns (stream PrimeNumberDecompositionResponse) {};
  // Client streaming
  rpc ComputeAverage(stream ComputeAverageRequest) returns (ComputeAverageResponse) {};
  // Bi-directional streaming
  rpc FindMaximum(stream FindMaximumRequest) returns (stream FindMaximumResponse) {};
  
  /*
  Unary

  Error handling:
  This RPC will throw an exception if the sent number is negative. The error being sent is of type `INVALID_ARGUMENT`
  */
  rpc SquareRoot(SquareRootRequest) returns (SquareRootResponse){}; 
}
